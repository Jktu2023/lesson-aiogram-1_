# –û–±—â–∞—è —Ü–µ–ª—å –±–æ—Ç–∞. –ü—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –∏–ª–∏ /random –±–æ—Ç:
# –ù–∞—Ö–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω—É—é –≥–ª–∞–≤—É –º–∞–Ω–≥–∏.
# –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü —ç—Ç–æ–π –≥–ª–∞–≤—ã.
# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–Ω—É —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–¥–ø–∏—Å—å—é: –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–Ω–≥–∏ –∏ ID –≥–ª–∞–≤—ã.
import asyncio
import requests
import random
from aiogram import Bot, Dispatcher
from aiogram.filters import Command, CommandStart
from aiogram.types import Message

from dotenv import load_dotenv # load_dotenv ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞.
import os

load_dotenv()
# —Ç–æ–∫–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ .env
TOKEN_BOT = os.getenv('TOKEN_BOT')
if not TOKEN_BOT:
    raise ValueError("TOKEN_BOT –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN_BOT)
dp = Dispatcher()



# --- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞–Ω–≥–∏ ---
def get_random_manga_page():
    try:
        # –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≥–ª–∞–≤—É. –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–µ–ª–∞–µ—Ç GET-–∑–∞–ø—Ä–æ—Å –∫ https://api.mangadex.org/chapter
        chapter_response = requests.get(
            "https://api.mangadex.org/chapter",
            params={
                "limit": 1, # –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ–¥–Ω—É –≥–ª–∞–≤—É.
                "offset": random.randint(0, 10000), # (—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é, –∞ –Ω–µ –ø–µ—Ä–≤—É—é)
                "contentRating[]": ["safe", "suggestive", "erotica"],  # –≤–∫–ª—é—á–∞–µ—Ç –º–∞–Ω–≥—É —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                "order[createdAt]": "desc" # —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞).
            }
        )
        chapter_response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ GET-–∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–µ–Ω–æ
        chapters = chapter_response.json()["data"] # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤ "data" –∏–∑ –æ—Ç–≤–µ—Ç–∞
        if not chapters:
            return None

        chapter = chapters[0] # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é (–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é) –≥–ª–∞–≤—É
        chapter_id = chapter["id"] # –∫–æ–≤—ã—Ä—è–µ–º –µ–µ, —Å–Ω–∞—á–∞–ª–∞ –±–µ—Ä–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
        manga_title = chapter["attributes"].get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–∞–Ω–≥–∞") # –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–Ω–≥–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å).‚ö†Ô∏è title –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è .get() —Å –¥–µ—Ñ–æ–ª—Ç–æ–º.

        # –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü –≥–ª–∞–≤—ã –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç (at-home/server) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        # "baseUrl": "https://s4.mangadex.org",      "chapter":  {"hash": "abc123def",   "data": ["page1.jpg", "page2.jpg", ...]}
        pages_response = requests.get(f"https://api.mangadex.org/at-home/server/{chapter_id}")
        pages_response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
        server_data = pages_response.json() # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ

        base_url = server_data["baseUrl"] # baseUrl ‚Äî –±–∞–∑–æ–≤—ã–π –∞–¥—Ä–µ—Å —Ö–æ—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏.
        hash_value = server_data["chapter"]["hash"] # hash ‚Äî –ø–∞–ø–∫–∞, –≥–¥–µ –ª–µ–∂–∞—Ç —Ñ–∞–π–ª—ã –≥–ª–∞–≤—ã
        page_filenames = server_data["chapter"]["data"] # data ‚Äî —Å–ø–∏—Å–æ–∫ –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤ (—Å—Ç—Ä–∞–Ω–∏—Ü).

        if not page_filenames:
            return None

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        random_page = random.choice(page_filenames) # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤ (—Å—Ç—Ä–∞–Ω–∏—Ü)
        image_url = f"{base_url}/data/{hash_value}/{random_page}" # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ URL:
       # https://s4.mangadex.org/data/abc123def/page1.jpg

        return { # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ, —á—Ç–æ –Ω–∞–∫–æ–ø–∞–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä—å
            "image_url": image_url,
            "manga_title": manga_title,
            "chapter_id": chapter_id
        }

    except Exception as e: # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –ª–æ–≤–∏—Ç—Å—è –≤ except, –ø–µ—á–∞—Ç–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è None.
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:", e)
        return None


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start ---
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç MangaDex. üìö\n–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–ª—É—á–∞–π–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ –º–∞–Ω–≥–∏!")

    result = get_random_manga_page() # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞–Ω–≥–∏
    if result: # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞, –ø–æ—Ç—Ä–∞—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        caption = f"üìñ –ú–∞–Ω–≥–∞: {result['manga_title']}\nüîó –ì–ª–∞–≤–∞: {result['chapter_id']}"
        await message.answer_photo(photo=result["image_url"], caption=caption)
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /random ---
@dp.message(Command("random"))
async def cmd_random(message: Message):
    await message.answer("–ò—â—É –µ—â—ë –æ–¥–Ω—É —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")

    result = get_random_manga_page() # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞–Ω–≥–∏
    if result:
        caption = f"üìñ –ú–∞–Ω–≥–∞: {result['manga_title']}\nüîó –ì–ª–∞–≤–∞: {result['chapter_id']}"
        await message.answer_photo(photo=result["image_url"], caption=caption)
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")





# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())