# –≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
# –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å Reply-–∫–Ω–æ–ø–∫–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Ö.
# –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å Inline-–∫–Ω–æ–ø–∫–∏ (–∫–∞—Ç–∞–ª–æ–≥, –Ω–æ–≤–æ—Å—Ç–∏, –ø—Ä–æ—Ñ–∏–ª—å).
# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Inline-–∫–Ω–æ–ø–∫–∏.
# –ú–µ–Ω—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏.
# –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (callback.answer).

from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

import asyncio
from keyboards import main_kb, inline_keyboard_test, test_keyboard

from dotenv import load_dotenv # load_dotenv ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞.
import os

load_dotenv()
# —Ç–æ–∫–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ .env
TOKEN_BOT = os.getenv('TOKEN_BOT')
if not TOKEN_BOT:
    raise ValueError("TOKEN_BOT –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN_BOT)
dp = Dispatcher()

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ===
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç–∏–∫–∏, {message.from_user.first_name}!",
        reply_markup=inline_keyboard_test  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        # reply_markup=main_kb  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ Reply-–∫–Ω–æ–ø–æ–∫ ===
@dp.message(F.text == "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ 1")
async def test_button_1(message: Message):
    await message.answer('–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ reply –∫–Ω–æ–ø–∫—É "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ 1"')
@dp.message(F.text == "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ 2")
async def test_button_2(message: Message):
    await message.answer('–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ reply –∫–Ω–æ–ø–∫—É "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ 2"')


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ Inline-–∫–Ω–æ–ø–∫–∏ "–ù–æ–≤–æ—Å—Ç–∏" ===
@dp.callback_query(F.data == "news")
async def news(callback: CallbackQuery): # callback: CallbackQuery ‚Äî –ø–∞—Ä–∞–º–µ—Ç—Ä, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏:
                                        # –ö—Ç–æ –Ω–∞–∂–∞–ª,
                                        # –ö–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
                                        # –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã (callback_data),
                                        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Ç.–¥.
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ (—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º  –∏ –∫–Ω–æ–ø–∫–æ–π), –ø–æ—Ç–æ–º –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.answer("–ù–æ–≤–æ—Å—Ç–∏ –ø–æ–¥–≥—Ä—É–∂–∞—é—Ç—Å—è", show_alert=True) # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∫–∞–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.edit_text(
        "–í–æ—Ç —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!", # –í–æ—Ç —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!" ‚Äî —ç—Ç–æ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ test_keyboard() ‚Äî –Ω–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥ –Ω–∏–º.
        reply_markup=await test_keyboard() # –°–¥–µ–ª–∞–π —ç—Ç–æ –Ω–∞ –º–µ—Å—Ç–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å —á–∞—Ç.
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ Inline-–∫–Ω–æ–ø–∫–∏ "–ö–∞—Ç–∞–ª–æ–≥" ===
@dp.callback_query(F.data == "catalog")# –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º—ë—Ç –Ω–∞ inline-–∫–Ω–æ–ø–∫—É —Å callback_data='catalog'
async def catalog(callback: CallbackQuery): # callback: CallbackQuery ‚Äî –ø–∞—Ä–∞–º–µ—Ç—Ä, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Å–∞–º–æ —Å–æ–±—ã—Ç–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏.
    await callback.answer("–û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥...") # –≠—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å. –£–±–∏—Ä–∞–µ—Ç "–∫—Ä—É—Ç—è—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä" –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    builder = InlineKeyboardBuilder() # InlineKeyboardBuilder ‚Äî —É–¥–æ–±–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç (–ø–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å) –∏–∑ aiogram, —á—Ç–æ–±—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ (–æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –∏—Ö –º–Ω–æ–≥–æ –∏–ª–∏ –æ–Ω–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞).
    builder.add(InlineKeyboardButton(text="–¢–æ–≤–∞—Ä 1", callback_data="item_1")) # –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤ –ø–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å.
    builder.add(InlineKeyboardButton(text="–¢–æ–≤–∞—Ä 2", callback_data="item_2")) #text="–¢–æ–≤–∞—Ä 1" ‚Äî —á—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ –∫–Ω–æ–ø–∫–µ.
                                                    # callback_data="item_2" ‚Äî –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–¥—É—Ç –±–æ—Ç—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏.
    # builder.add() –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∏–Ω–æ–µ. –ß—Ç–æ–±—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ —Å—Ç—Ä–æ–∫–∞–º, –∏—Å–ø–æ–ª—å–∑—É—é—Ç .adjust().
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=builder.as_markup())

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ Inline-–∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å" ===
@dp.callback_query(F.data == "person") # ¬´–ó–∞–ø—É—Å—Ç–∏ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º—ë—Ç –Ω–∞ inline-–∫–Ω–æ–ø–∫—É —Å callback_data='person'¬ª
                                    # F.data == "person" ‚Äî —Ñ–∏–ª—å—Ç—Ä: —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ ‚Äî "person".
async def profile(callback: CallbackQuery):
    user = callback.from_user # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É. callback.from_user ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ User, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π:
                            # –∏–º—è,
                            # ID,
                            # username,
                            # —è–∑—ã–∫ –∏ –¥—Ä. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å user.first_name, user.id, user.username –∏ —Ç.–ø.
    await callback.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å") # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å. –£–±–∏—Ä–∞–µ—Ç "–∫—Ä—É—Ç—è—â–∏–π—Å—è –∫—Ä—É–∂–æ–∫" –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π.
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (toast) —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: üì± "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å"
    text = f"üë§ –ò–º—è: {user.first_name}\n"
    text += f"üÜî ID: {user.id}\n"
    text += f"üìé Username: @{user.username}" if user.username else ""
    await callback.message.edit_text(text) # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–æ, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º –±—ã–ª–∞ –∫–Ω–æ–ø–∫–∞).
                                            # –ó–∞–º–µ–Ω—è–µ—Ç –µ–≥–æ —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ.

# === –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ, –≥–¥–µ –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –∏–º–µ–µ—Ç callback_data –≤–∏–¥–∞ item_1, item_2 –∏ —Ç.–¥. ===
@dp.callback_query(F.data.startswith("item_"))  #–ó–∞–ø—É—Å—Ç–∏ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (callback_data) –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å item_
async def item(callback: CallbackQuery):
    item_id = callback.data.split("_")[1]   # –ï—Å–ª–∏ callback.data == "item_1" ‚Üí item_id = "1"
                                            # –ï—Å–ª–∏ callback.data == "item_42" ‚Üí item_id = "42"
    await callback.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä {item_id}")
    await callback.message.edit_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ **–¢–æ–≤–∞—Ä {item_id}**. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä!")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())